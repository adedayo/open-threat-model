/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the OpenThreatModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenThreatModel{}

// OpenThreatModel struct for OpenThreatModel
type OpenThreatModel struct {
	// states the OTM semantic version used in the current file. It is an important field in order to ensure backwards compatibility.
	OtmVersion string `json:"otmVersion" yaml:"otmVersion"`
	Project Project `json:"project" yaml:"project"`
	// define different ways in which the project may be represented. Representation is an abstract concept and there might be several implementations
	Representations []Representation `json:"representations,omitempty" yaml:"representations,omitempty"`
	// are the different kinds of sensible information that take part in our threat model.
	Assets []Asset `json:"assets,omitempty" yaml:"assets,omitempty"`
	// are the different pieces of software / hardware that make up our project.
	Components []Component `json:"components,omitempty" yaml:"components,omitempty"`
	// are the elements that describe the movement of relevant information (assets) across our architecture.
	Dataflows []Dataflow `json:"dataflows,omitempty" yaml:"dataflows,omitempty"`
	// are the different areas within which components are located. They define how trustworthy an area is, based on how accessible it is: the more accessible, the less trustworthy.
	TrustZones []TrustZone `json:"trustZones,omitempty" yaml:"trustZones,omitempty"`
	// are the undesirable outcomes that can occur in our system and that we want to prevent.
	Threats []Threat `json:"threats,omitempty" yaml:"threats,omitempty"`
	// are the actions that we can take (or controls that we can put in place) in order to prevent a threat from taking place.
	Mitigations []Mitigation `json:"mitigations,omitempty" yaml:"mitigations,omitempty"`
}

// NewOpenThreatModel instantiates a new OpenThreatModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenThreatModel(otmVersion string, project Project) *OpenThreatModel {
	this := OpenThreatModel{}
	this.OtmVersion = otmVersion
	this.Project = project
	return &this
}

// NewOpenThreatModelWithDefaults instantiates a new OpenThreatModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenThreatModelWithDefaults() *OpenThreatModel {
	this := OpenThreatModel{}
	var otmVersion string = "0.1.0"
	this.OtmVersion = otmVersion
	return &this
}

// GetOtmVersion returns the OtmVersion field value
func (o *OpenThreatModel) GetOtmVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtmVersion
}

// GetOtmVersionOk returns a tuple with the OtmVersion field value
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetOtmVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtmVersion, true
}

// SetOtmVersion sets field value
func (o *OpenThreatModel) SetOtmVersion(v string) {
	o.OtmVersion = v
}

// GetProject returns the Project field value
func (o *OpenThreatModel) GetProject() Project {
	if o == nil {
		var ret Project
		return ret
	}

	return o.Project
}

// GetProjectOk returns a tuple with the Project field value
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetProjectOk() (*Project, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Project, true
}

// SetProject sets field value
func (o *OpenThreatModel) SetProject(v Project) {
	o.Project = v
}

// GetRepresentations returns the Representations field value if set, zero value otherwise.
func (o *OpenThreatModel) GetRepresentations() []Representation {
	if o == nil || IsNil(o.Representations) {
		var ret []Representation
		return ret
	}
	return o.Representations
}

// GetRepresentationsOk returns a tuple with the Representations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetRepresentationsOk() ([]Representation, bool) {
	if o == nil || IsNil(o.Representations) {
		return nil, false
	}
	return o.Representations, true
}

// HasRepresentations returns a boolean if a field has been set.
func (o *OpenThreatModel) HasRepresentations() bool {
	if o != nil && !IsNil(o.Representations) {
		return true
	}

	return false
}

// SetRepresentations gets a reference to the given []Representation and assigns it to the Representations field.
func (o *OpenThreatModel) SetRepresentations(v []Representation) {
	o.Representations = v
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *OpenThreatModel) GetAssets() []Asset {
	if o == nil || IsNil(o.Assets) {
		var ret []Asset
		return ret
	}
	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetAssetsOk() ([]Asset, bool) {
	if o == nil || IsNil(o.Assets) {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *OpenThreatModel) HasAssets() bool {
	if o != nil && !IsNil(o.Assets) {
		return true
	}

	return false
}

// SetAssets gets a reference to the given []Asset and assigns it to the Assets field.
func (o *OpenThreatModel) SetAssets(v []Asset) {
	o.Assets = v
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *OpenThreatModel) GetComponents() []Component {
	if o == nil || IsNil(o.Components) {
		var ret []Component
		return ret
	}
	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetComponentsOk() ([]Component, bool) {
	if o == nil || IsNil(o.Components) {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *OpenThreatModel) HasComponents() bool {
	if o != nil && !IsNil(o.Components) {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []Component and assigns it to the Components field.
func (o *OpenThreatModel) SetComponents(v []Component) {
	o.Components = v
}

// GetDataflows returns the Dataflows field value if set, zero value otherwise.
func (o *OpenThreatModel) GetDataflows() []Dataflow {
	if o == nil || IsNil(o.Dataflows) {
		var ret []Dataflow
		return ret
	}
	return o.Dataflows
}

// GetDataflowsOk returns a tuple with the Dataflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetDataflowsOk() ([]Dataflow, bool) {
	if o == nil || IsNil(o.Dataflows) {
		return nil, false
	}
	return o.Dataflows, true
}

// HasDataflows returns a boolean if a field has been set.
func (o *OpenThreatModel) HasDataflows() bool {
	if o != nil && !IsNil(o.Dataflows) {
		return true
	}

	return false
}

// SetDataflows gets a reference to the given []Dataflow and assigns it to the Dataflows field.
func (o *OpenThreatModel) SetDataflows(v []Dataflow) {
	o.Dataflows = v
}

// GetTrustZones returns the TrustZones field value if set, zero value otherwise.
func (o *OpenThreatModel) GetTrustZones() []TrustZone {
	if o == nil || IsNil(o.TrustZones) {
		var ret []TrustZone
		return ret
	}
	return o.TrustZones
}

// GetTrustZonesOk returns a tuple with the TrustZones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetTrustZonesOk() ([]TrustZone, bool) {
	if o == nil || IsNil(o.TrustZones) {
		return nil, false
	}
	return o.TrustZones, true
}

// HasTrustZones returns a boolean if a field has been set.
func (o *OpenThreatModel) HasTrustZones() bool {
	if o != nil && !IsNil(o.TrustZones) {
		return true
	}

	return false
}

// SetTrustZones gets a reference to the given []TrustZone and assigns it to the TrustZones field.
func (o *OpenThreatModel) SetTrustZones(v []TrustZone) {
	o.TrustZones = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *OpenThreatModel) GetThreats() []Threat {
	if o == nil || IsNil(o.Threats) {
		var ret []Threat
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetThreatsOk() ([]Threat, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *OpenThreatModel) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []Threat and assigns it to the Threats field.
func (o *OpenThreatModel) SetThreats(v []Threat) {
	o.Threats = v
}

// GetMitigations returns the Mitigations field value if set, zero value otherwise.
func (o *OpenThreatModel) GetMitigations() []Mitigation {
	if o == nil || IsNil(o.Mitigations) {
		var ret []Mitigation
		return ret
	}
	return o.Mitigations
}

// GetMitigationsOk returns a tuple with the Mitigations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenThreatModel) GetMitigationsOk() ([]Mitigation, bool) {
	if o == nil || IsNil(o.Mitigations) {
		return nil, false
	}
	return o.Mitigations, true
}

// HasMitigations returns a boolean if a field has been set.
func (o *OpenThreatModel) HasMitigations() bool {
	if o != nil && !IsNil(o.Mitigations) {
		return true
	}

	return false
}

// SetMitigations gets a reference to the given []Mitigation and assigns it to the Mitigations field.
func (o *OpenThreatModel) SetMitigations(v []Mitigation) {
	o.Mitigations = v
}

func (o OpenThreatModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenThreatModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["otmVersion"] = o.OtmVersion
	toSerialize["project"] = o.Project
	if !IsNil(o.Representations) {
		toSerialize["representations"] = o.Representations
	}
	if !IsNil(o.Assets) {
		toSerialize["assets"] = o.Assets
	}
	if !IsNil(o.Components) {
		toSerialize["components"] = o.Components
	}
	if !IsNil(o.Dataflows) {
		toSerialize["dataflows"] = o.Dataflows
	}
	if !IsNil(o.TrustZones) {
		toSerialize["trustZones"] = o.TrustZones
	}
	if !IsNil(o.Threats) {
		toSerialize["threats"] = o.Threats
	}
	if !IsNil(o.Mitigations) {
		toSerialize["mitigations"] = o.Mitigations
	}
	return toSerialize, nil
}

type NullableOpenThreatModel struct {
	value *OpenThreatModel
	isSet bool
}

func (v NullableOpenThreatModel) Get() *OpenThreatModel {
	return v.value
}

func (v *NullableOpenThreatModel) Set(val *OpenThreatModel) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenThreatModel) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenThreatModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenThreatModel(val *OpenThreatModel) *NullableOpenThreatModel {
	return &NullableOpenThreatModel{value: val, isSet: true}
}

func (v NullableOpenThreatModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenThreatModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


