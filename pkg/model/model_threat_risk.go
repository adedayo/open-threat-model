/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the ThreatRisk type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreatRisk{}

// ThreatRisk struct for ThreatRisk
type ThreatRisk struct {
	Likelihood int `json:"likelihood" yaml:"likelihood"`
	LikelihoodComment *string `json:"likelihoodComment,omitempty" yaml:"likelihoodComment,omitempty"`
	Impact int `json:"impact" yaml:"impact"`
	ImpactComment *string `json:"impactComment,omitempty" yaml:"impactComment,omitempty"`
}

// NewThreatRisk instantiates a new ThreatRisk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreatRisk(likelihood int, impact int) *ThreatRisk {
	this := ThreatRisk{}
	this.Likelihood = likelihood
	this.Impact = impact
	return &this
}

// NewThreatRiskWithDefaults instantiates a new ThreatRisk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatRiskWithDefaults() *ThreatRisk {
	this := ThreatRisk{}
	return &this
}

// GetLikelihood returns the Likelihood field value
func (o *ThreatRisk) GetLikelihood() int {
	if o == nil {
		var ret int
		return ret
	}

	return o.Likelihood
}

// GetLikelihoodOk returns a tuple with the Likelihood field value
// and a boolean to check if the value has been set.
func (o *ThreatRisk) GetLikelihoodOk() (*int, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Likelihood, true
}

// SetLikelihood sets field value
func (o *ThreatRisk) SetLikelihood(v int) {
	o.Likelihood = v
}

// GetLikelihoodComment returns the LikelihoodComment field value if set, zero value otherwise.
func (o *ThreatRisk) GetLikelihoodComment() string {
	if o == nil || IsNil(o.LikelihoodComment) {
		var ret string
		return ret
	}
	return *o.LikelihoodComment
}

// GetLikelihoodCommentOk returns a tuple with the LikelihoodComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatRisk) GetLikelihoodCommentOk() (*string, bool) {
	if o == nil || IsNil(o.LikelihoodComment) {
		return nil, false
	}
	return o.LikelihoodComment, true
}

// HasLikelihoodComment returns a boolean if a field has been set.
func (o *ThreatRisk) HasLikelihoodComment() bool {
	if o != nil && !IsNil(o.LikelihoodComment) {
		return true
	}

	return false
}

// SetLikelihoodComment gets a reference to the given string and assigns it to the LikelihoodComment field.
func (o *ThreatRisk) SetLikelihoodComment(v string) {
	o.LikelihoodComment = &v
}

// GetImpact returns the Impact field value
func (o *ThreatRisk) GetImpact() int {
	if o == nil {
		var ret int
		return ret
	}

	return o.Impact
}

// GetImpactOk returns a tuple with the Impact field value
// and a boolean to check if the value has been set.
func (o *ThreatRisk) GetImpactOk() (*int, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Impact, true
}

// SetImpact sets field value
func (o *ThreatRisk) SetImpact(v int) {
	o.Impact = v
}

// GetImpactComment returns the ImpactComment field value if set, zero value otherwise.
func (o *ThreatRisk) GetImpactComment() string {
	if o == nil || IsNil(o.ImpactComment) {
		var ret string
		return ret
	}
	return *o.ImpactComment
}

// GetImpactCommentOk returns a tuple with the ImpactComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatRisk) GetImpactCommentOk() (*string, bool) {
	if o == nil || IsNil(o.ImpactComment) {
		return nil, false
	}
	return o.ImpactComment, true
}

// HasImpactComment returns a boolean if a field has been set.
func (o *ThreatRisk) HasImpactComment() bool {
	if o != nil && !IsNil(o.ImpactComment) {
		return true
	}

	return false
}

// SetImpactComment gets a reference to the given string and assigns it to the ImpactComment field.
func (o *ThreatRisk) SetImpactComment(v string) {
	o.ImpactComment = &v
}

func (o ThreatRisk) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreatRisk) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["likelihood"] = o.Likelihood
	if !IsNil(o.LikelihoodComment) {
		toSerialize["likelihoodComment"] = o.LikelihoodComment
	}
	toSerialize["impact"] = o.Impact
	if !IsNil(o.ImpactComment) {
		toSerialize["impactComment"] = o.ImpactComment
	}
	return toSerialize, nil
}

type NullableThreatRisk struct {
	value *ThreatRisk
	isSet bool
}

func (v NullableThreatRisk) Get() *ThreatRisk {
	return v.value
}

func (v *NullableThreatRisk) Set(val *ThreatRisk) {
	v.value = val
	v.isSet = true
}

func (v NullableThreatRisk) IsSet() bool {
	return v.isSet
}

func (v *NullableThreatRisk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreatRisk(val *ThreatRisk) *NullableThreatRisk {
	return &NullableThreatRisk{value: val, isSet: true}
}

func (v NullableThreatRisk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreatRisk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


