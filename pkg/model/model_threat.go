/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the Threat type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Threat{}

// Threat struct for Threat
type Threat struct {
	Id string `json:"id" yaml:"id"`
	Name string `json:"name" yaml:"name"`
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	Categories []string `json:"categories,omitempty" yaml:"categories,omitempty"`
	Cwes []string `json:"cwes,omitempty" yaml:"cwes,omitempty"`
	Risk ThreatRisk `json:"risk" yaml:"risk"`
	Tags []string `json:"tags,omitempty" yaml:"tags,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty" yaml:"attributes,omitempty"`
}

// NewThreat instantiates a new Threat object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreat(id string, name string, risk ThreatRisk) *Threat {
	this := Threat{}
	this.Id = id
	this.Name = name
	this.Risk = risk
	return &this
}

// NewThreatWithDefaults instantiates a new Threat object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatWithDefaults() *Threat {
	this := Threat{}
	return &this
}

// GetId returns the Id field value
func (o *Threat) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Threat) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Threat) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Threat) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Threat) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Threat) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Threat) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Threat) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Threat) SetDescription(v string) {
	o.Description = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *Threat) GetCategories() []string {
	if o == nil || IsNil(o.Categories) {
		var ret []string
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetCategoriesOk() ([]string, bool) {
	if o == nil || IsNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *Threat) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []string and assigns it to the Categories field.
func (o *Threat) SetCategories(v []string) {
	o.Categories = v
}

// GetCwes returns the Cwes field value if set, zero value otherwise.
func (o *Threat) GetCwes() []string {
	if o == nil || IsNil(o.Cwes) {
		var ret []string
		return ret
	}
	return o.Cwes
}

// GetCwesOk returns a tuple with the Cwes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetCwesOk() ([]string, bool) {
	if o == nil || IsNil(o.Cwes) {
		return nil, false
	}
	return o.Cwes, true
}

// HasCwes returns a boolean if a field has been set.
func (o *Threat) HasCwes() bool {
	if o != nil && !IsNil(o.Cwes) {
		return true
	}

	return false
}

// SetCwes gets a reference to the given []string and assigns it to the Cwes field.
func (o *Threat) SetCwes(v []string) {
	o.Cwes = v
}

// GetRisk returns the Risk field value
func (o *Threat) GetRisk() ThreatRisk {
	if o == nil {
		var ret ThreatRisk
		return ret
	}

	return o.Risk
}

// GetRiskOk returns a tuple with the Risk field value
// and a boolean to check if the value has been set.
func (o *Threat) GetRiskOk() (*ThreatRisk, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Risk, true
}

// SetRisk sets field value
func (o *Threat) SetRisk(v ThreatRisk) {
	o.Risk = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Threat) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Threat) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Threat) SetTags(v []string) {
	o.Tags = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Threat) GetAttributes() map[string]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Threat) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Threat) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *Threat) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

func (o Threat) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Threat) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.Cwes) {
		toSerialize["cwes"] = o.Cwes
	}
	toSerialize["risk"] = o.Risk
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableThreat struct {
	value *Threat
	isSet bool
}

func (v NullableThreat) Get() *Threat {
	return v.value
}

func (v *NullableThreat) Set(val *Threat) {
	v.value = val
	v.isSet = true
}

func (v NullableThreat) IsSet() bool {
	return v.isSet
}

func (v *NullableThreat) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreat(val *Threat) *NullableThreat {
	return &NullableThreat{value: val, isSet: true}
}

func (v NullableThreat) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreat) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


