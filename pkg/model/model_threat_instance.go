/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the ThreatInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ThreatInstance{}

// ThreatInstance struct for ThreatInstance
type ThreatInstance struct {
	Threat string `json:"threat" yaml:"threat"`
	State string `json:"state" yaml:"state"`
	Mitigations []MitigationInstance `json:"mitigations,omitempty" yaml:"mitigations,omitempty"`
}

// NewThreatInstance instantiates a new ThreatInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThreatInstance(threat string, state string) *ThreatInstance {
	this := ThreatInstance{}
	this.Threat = threat
	this.State = state
	return &this
}

// NewThreatInstanceWithDefaults instantiates a new ThreatInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThreatInstanceWithDefaults() *ThreatInstance {
	this := ThreatInstance{}
	return &this
}

// GetThreat returns the Threat field value
func (o *ThreatInstance) GetThreat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Threat
}

// GetThreatOk returns a tuple with the Threat field value
// and a boolean to check if the value has been set.
func (o *ThreatInstance) GetThreatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threat, true
}

// SetThreat sets field value
func (o *ThreatInstance) SetThreat(v string) {
	o.Threat = v
}

// GetState returns the State field value
func (o *ThreatInstance) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ThreatInstance) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ThreatInstance) SetState(v string) {
	o.State = v
}

// GetMitigations returns the Mitigations field value if set, zero value otherwise.
func (o *ThreatInstance) GetMitigations() []MitigationInstance {
	if o == nil || IsNil(o.Mitigations) {
		var ret []MitigationInstance
		return ret
	}
	return o.Mitigations
}

// GetMitigationsOk returns a tuple with the Mitigations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThreatInstance) GetMitigationsOk() ([]MitigationInstance, bool) {
	if o == nil || IsNil(o.Mitigations) {
		return nil, false
	}
	return o.Mitigations, true
}

// HasMitigations returns a boolean if a field has been set.
func (o *ThreatInstance) HasMitigations() bool {
	if o != nil && !IsNil(o.Mitigations) {
		return true
	}

	return false
}

// SetMitigations gets a reference to the given []MitigationInstance and assigns it to the Mitigations field.
func (o *ThreatInstance) SetMitigations(v []MitigationInstance) {
	o.Mitigations = v
}

func (o ThreatInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ThreatInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["threat"] = o.Threat
	toSerialize["state"] = o.State
	if !IsNil(o.Mitigations) {
		toSerialize["mitigations"] = o.Mitigations
	}
	return toSerialize, nil
}

type NullableThreatInstance struct {
	value *ThreatInstance
	isSet bool
}

func (v NullableThreatInstance) Get() *ThreatInstance {
	return v.value
}

func (v *NullableThreatInstance) Set(val *ThreatInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableThreatInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableThreatInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThreatInstance(val *ThreatInstance) *NullableThreatInstance {
	return &NullableThreatInstance{value: val, isSet: true}
}

func (v NullableThreatInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThreatInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


