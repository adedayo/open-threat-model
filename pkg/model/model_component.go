/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the Component type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Component{}

// Component struct for Component
type Component struct {
	Id string `json:"id" yaml:"id"`
	Name string `json:"name" yaml:"name"`
	Type string `json:"type" yaml:"type"`
	Tags []string `json:"tags,omitempty" yaml:"tags,omitempty"`
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	Parent Parent `json:"parent" yaml:"parent"`
	Representations []ComponentRepresentationsInner `json:"representations,omitempty" yaml:"representations,omitempty"`
	Assets []AssetInstance `json:"assets,omitempty" yaml:"assets,omitempty"`
	Threats []ThreatInstance `json:"threats,omitempty" yaml:"threats,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty" yaml:"attributes,omitempty"`
}

// NewComponent instantiates a new Component object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComponent(id string, name string, type_ string, parent Parent) *Component {
	this := Component{}
	this.Id = id
	this.Name = name
	this.Type = type_
	this.Parent = parent
	return &this
}

// NewComponentWithDefaults instantiates a new Component object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComponentWithDefaults() *Component {
	this := Component{}
	return &this
}

// GetId returns the Id field value
func (o *Component) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Component) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Component) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *Component) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Component) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Component) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *Component) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Component) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Component) SetType(v string) {
	o.Type = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Component) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Component) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Component) SetTags(v []string) {
	o.Tags = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Component) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Component) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Component) SetDescription(v string) {
	o.Description = &v
}

// GetParent returns the Parent field value
func (o *Component) GetParent() Parent {
	if o == nil {
		var ret Parent
		return ret
	}

	return o.Parent
}

// GetParentOk returns a tuple with the Parent field value
// and a boolean to check if the value has been set.
func (o *Component) GetParentOk() (*Parent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Parent, true
}

// SetParent sets field value
func (o *Component) SetParent(v Parent) {
	o.Parent = v
}

// GetRepresentations returns the Representations field value if set, zero value otherwise.
func (o *Component) GetRepresentations() []ComponentRepresentationsInner {
	if o == nil || IsNil(o.Representations) {
		var ret []ComponentRepresentationsInner
		return ret
	}
	return o.Representations
}

// GetRepresentationsOk returns a tuple with the Representations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetRepresentationsOk() ([]ComponentRepresentationsInner, bool) {
	if o == nil || IsNil(o.Representations) {
		return nil, false
	}
	return o.Representations, true
}

// HasRepresentations returns a boolean if a field has been set.
func (o *Component) HasRepresentations() bool {
	if o != nil && !IsNil(o.Representations) {
		return true
	}

	return false
}

// SetRepresentations gets a reference to the given []ComponentRepresentationsInner and assigns it to the Representations field.
func (o *Component) SetRepresentations(v []ComponentRepresentationsInner) {
	o.Representations = v
}

// GetAssets returns the Assets field value if set, zero value otherwise.
func (o *Component) GetAssets() []AssetInstance {
	if o == nil || IsNil(o.Assets) {
		var ret []AssetInstance
		return ret
	}
	return o.Assets
}

// GetAssetsOk returns a tuple with the Assets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetAssetsOk() ([]AssetInstance, bool) {
	if o == nil || IsNil(o.Assets) {
		return nil, false
	}
	return o.Assets, true
}

// HasAssets returns a boolean if a field has been set.
func (o *Component) HasAssets() bool {
	if o != nil && !IsNil(o.Assets) {
		return true
	}

	return false
}

// SetAssets gets a reference to the given []AssetInstance and assigns it to the Assets field.
func (o *Component) SetAssets(v []AssetInstance) {
	o.Assets = v
}

// GetThreats returns the Threats field value if set, zero value otherwise.
func (o *Component) GetThreats() []ThreatInstance {
	if o == nil || IsNil(o.Threats) {
		var ret []ThreatInstance
		return ret
	}
	return o.Threats
}

// GetThreatsOk returns a tuple with the Threats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetThreatsOk() ([]ThreatInstance, bool) {
	if o == nil || IsNil(o.Threats) {
		return nil, false
	}
	return o.Threats, true
}

// HasThreats returns a boolean if a field has been set.
func (o *Component) HasThreats() bool {
	if o != nil && !IsNil(o.Threats) {
		return true
	}

	return false
}

// SetThreats gets a reference to the given []ThreatInstance and assigns it to the Threats field.
func (o *Component) SetThreats(v []ThreatInstance) {
	o.Threats = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *Component) GetAttributes() map[string]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Component) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *Component) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *Component) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

func (o Component) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Component) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["parent"] = o.Parent
	if !IsNil(o.Representations) {
		toSerialize["representations"] = o.Representations
	}
	if !IsNil(o.Assets) {
		toSerialize["assets"] = o.Assets
	}
	if !IsNil(o.Threats) {
		toSerialize["threats"] = o.Threats
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableComponent struct {
	value *Component
	isSet bool
}

func (v NullableComponent) Get() *Component {
	return v.value
}

func (v *NullableComponent) Set(val *Component) {
	v.value = val
	v.isSet = true
}

func (v NullableComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComponent(val *Component) *NullableComponent {
	return &NullableComponent{value: val, isSet: true}
}

func (v NullableComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


