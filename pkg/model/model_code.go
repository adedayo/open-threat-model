/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the Code type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Code{}

// Code struct for Code
type Code struct {
	Representation
	Repository *Repository `json:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"json:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty" yaml:"repository,omitempty""`
}

// NewCode instantiates a new Code object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCode(name string, id string, type_ string) *Code {
	this := Code{}
	this.Name = name
	this.Id = id
	this.Type = type_
	return &this
}

// NewCodeWithDefaults instantiates a new Code object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeWithDefaults() *Code {
	this := Code{}
	return &this
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *Code) GetRepository() Repository {
	if o == nil || IsNil(o.Repository) {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Code) GetRepositoryOk() (*Repository, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *Code) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *Code) SetRepository(v Repository) {
	o.Repository = &v
}

func (o Code) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Code) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedRepresentation, errRepresentation := json.Marshal(o.Representation)
	if errRepresentation != nil {
		return map[string]interface{}{}, errRepresentation
	}
	errRepresentation = json.Unmarshal([]byte(serializedRepresentation), &toSerialize)
	if errRepresentation != nil {
		return map[string]interface{}{}, errRepresentation
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	return toSerialize, nil
}

type NullableCode struct {
	value *Code
	isSet bool
}

func (v NullableCode) Get() *Code {
	return v.value
}

func (v *NullableCode) Set(val *Code) {
	v.value = val
	v.isSet = true
}

func (v NullableCode) IsSet() bool {
	return v.isSet
}

func (v *NullableCode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCode(val *Code) *NullableCode {
	return &NullableCode{value: val, isSet: true}
}

func (v NullableCode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


