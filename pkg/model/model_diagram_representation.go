/*
Open Threat Model Specification

A Schema Definition for Open Threat Model https://github.com/iriusrisk/OpenThreatModel\"

API version: 0.1.0
Contact: info@cysoh.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package otm

import (
	"encoding/json"
)

// checks if the DiagramRepresentation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiagramRepresentation{}

// DiagramRepresentation struct for DiagramRepresentation
type DiagramRepresentation struct {
	Name string `json:"name" yaml:"name"`
	Id string `json:"id" yaml:"id"`
	Type string `json:"type" yaml:"type"`
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	Attributes *map[string]string `json:"attributes,omitempty" yaml:"attributes,omitempty"`
	Size Size `json:"size" yaml:"size"`
}

// NewDiagramRepresentation instantiates a new DiagramRepresentation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiagramRepresentation(name string, id string, type_ string, size Size) *DiagramRepresentation {
	this := DiagramRepresentation{}
	this.Name = name
	this.Id = id
	this.Type = type_
	this.Size = size
	return &this
}

// NewDiagramRepresentationWithDefaults instantiates a new DiagramRepresentation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiagramRepresentationWithDefaults() *DiagramRepresentation {
	this := DiagramRepresentation{}
	return &this
}

// GetName returns the Name field value
func (o *DiagramRepresentation) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DiagramRepresentation) SetName(v string) {
	o.Name = v
}

// GetId returns the Id field value
func (o *DiagramRepresentation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DiagramRepresentation) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *DiagramRepresentation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *DiagramRepresentation) SetType(v string) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DiagramRepresentation) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DiagramRepresentation) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DiagramRepresentation) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *DiagramRepresentation) GetAttributes() map[string]string {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]string
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetAttributesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *DiagramRepresentation) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]string and assigns it to the Attributes field.
func (o *DiagramRepresentation) SetAttributes(v map[string]string) {
	o.Attributes = &v
}

// GetSize returns the Size field value
func (o *DiagramRepresentation) GetSize() Size {
	if o == nil {
		var ret Size
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *DiagramRepresentation) GetSizeOk() (*Size, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *DiagramRepresentation) SetSize(v Size) {
	o.Size = v
}

func (o DiagramRepresentation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiagramRepresentation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	toSerialize["size"] = o.Size
	return toSerialize, nil
}

type NullableDiagramRepresentation struct {
	value *DiagramRepresentation
	isSet bool
}

func (v NullableDiagramRepresentation) Get() *DiagramRepresentation {
	return v.value
}

func (v *NullableDiagramRepresentation) Set(val *DiagramRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableDiagramRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableDiagramRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiagramRepresentation(val *DiagramRepresentation) *NullableDiagramRepresentation {
	return &NullableDiagramRepresentation{value: val, isSet: true}
}

func (v NullableDiagramRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiagramRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


